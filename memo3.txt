When you make an undo/redo feature in python you use a stack because it follows a last-in-first-out order. For instance if I change a word in a document it goes into the undo stack then the most recent action is stored and put onto the stack. The one on top of the stack is the one that gets removed first. The last change done will always be the first one removed in the stack. We have a redo stack for redos. This separate stack is able to reapply what we “removed” in the stack.

For a help desk system the same logic can be applied to this. Because customers should be served in the order they arrive, we put a queue in to enforce this kind of fairness. The first customer comes in then the stack begins and then the next customer comes in and gets added to the stack we have. We wouldn’t use a list as python lists are not optimized for these types of operations. Removing the front of the list shifts all elements so by using a node we can have the elements constantly change and it’ll be fine. From this the stack can always change when we need it to that way we have a system that is easy to maintain and fix.
